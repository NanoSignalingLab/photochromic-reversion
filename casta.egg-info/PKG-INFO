Metadata-Version: 2.4
Name: casta
Version: 0.0.1
Summary: Calculate spatial transient arrests
Author-email: Michelle von Arx <michelle.vonarx@tum.de>
License: MIT License
        
        Copyright (c) 2025 NanoSignalingLab
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/NanoSignalingLab/photochromic-reversion/
Classifier: License :: :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=2.0.1
Requires-Dist: pandas>=2.2.3
Requires-Dist: scipy>=1.15.0
Requires-Dist: matplotlib>=3.10.0
Requires-Dist: seaborn>=0.13.2
Requires-Dist: scikit-learn>=1.6.1
Requires-Dist: hmmlearn>=0.3.3
Requires-Dist: tqdm>=4.67.1
Requires-Dist: shapely>=2.0.6
Dynamic: license-file

# photochromic-reversion

This repository contains the codebase to automatically identify and quantify transient spatial arrest events in long-term single molecule tracks. Building on previously published code for [Diffusional Fingerprinting](https://github.com/hatzakislab/Diffusional-Fingerprinting), it also computes additional features of the molecule track to recognize transient spatial arrest events. 

To run the analysis on a CSV file with the track information, simply run `main.py`. An example file with the required input file structure is provided (`example.csv`). These input files can be generated with any standard image analysis tool, e.g. TrackMate (ImageJ).
Global variables like the CSV input file path, image save path, minimum track length and track time step length (acquisition rate) can be adjusted near the top of the main script.

As an output, an Excel file with the results of the analyzed tracks is saved at the location of the input file. This file contains information such as the number of spatial arrest events, the number of track points and the time spent in each spatial arrest, and averages across all events in all tracks for a given file.
Additionally, the graphs visualizing the tracks and the detected events are saved at the specified path location. 
